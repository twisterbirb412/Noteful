{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteError/NoteError.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","ValidationError/ValidationError.js","AddNote/AddNote.js","FolderError/FolderError.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteError","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","NoteListMain","notesForFolder","getNotesForFolder","NoteError_NoteError","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","Required","AddFolder","handleClickCancel","nameInput","createRef","_this2","fName","current","value","log","folderName","target","setState","body","JSON","stringify","data","_this3","onSubmit","handleSubmit","message","htmlFor","placeholder","ref","required","AddFolder_Required","ValidationError","Fragment","AddNote","touched","newNote","Date","trim","nameError","validateNoteName","onChange","updateName","AddNote_Required","disabled","FolderError","App","handleAddFolder","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","FolderError_FolderError","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f30d9a94.chunk.js","sourcesContent":["import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:9090'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class NoteError extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {hasError: true};\n    }\n\n    render() {\n        if (this.state.hasError){\n            return(\n                <h2>Could not display this note.</h2>\n            );\n        }\n        return this.props.children;\n    }\n    \n\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport NoteError from '../NoteError/NoteError'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <NoteError>\n              <li key={note.id}>\n                <Note\n                  id={note.id}\n                  name={note.name}\n                  modified={note.modified}\n                />\n              </li>\n            </NoteError>\n            \n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext';\n\nconst Required = () => (\n    <span className='AddBookmark__required'>*</span>\n)\n\n\nexport default class AddFolder extends React.Component {\n    static contextType = ApiContext;\n\n    constructor(props) {\n        super(props);\n        this.nameInput = React.createRef();\n    }\n    state = {\n        error: null,\n    }\n\n\n    //need a handleSubmit function\n    handleSubmit(e) {\n        e.preventDefault()\n        //get the form fields from the event\n\n        let fName = this.nameInput.current.value\n\n        console.log({fName})\n        \n        const folderName = { \n            name: e.target['folderName'].value,\n        }\n\n        console.log(folderName)\n\n        this.setState({ error: null})\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            body: JSON.stringify(folderName),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then( res => {\n            if (!res.ok) {\n                // get the error message from the response,\n                return res.json().then(error => {\n                  // then throw it\n                  throw error\n                })\n            }\n            return res.json()\n        })\n        .then(data => {\n            fName = '';\n            console.log(data)\n            //not sure what/or why this does\n            this.context.addFolder(data);\n            this.props.history.push('/');\n        })\n        .catch(error => {\n            this.setState({ error })\n          })\n        \n    }  \n\n    //need a handleClickCancel function\n    handleClickCancel = () => {\n        this.props.history.push('/')\n      };\n    \n\n    render () {\n        const { error } = this.state\n\n        return (\n            <section className=\"AddFolder\">\n                <h2>Create a new folder.</h2>\n                <form\n                    className=\"AddFolder_form\"\n                    onSubmit={e => (this.handleSubmit(e))}\n                >\n                    <div className='AddFolder__error' role='alert'>\n                        {error && <p>{error.message}</p>}\n                     </div>\n                     <div>\n                         <label htmlFor=\"folderName\">\n                             Name:\n                             \n                         </label>\n                        <input\n                            type=\"text\"\n                            name=\"folderName\"\n                            id=\"folderName\"\n                            placeholder=\"New Folder\"\n                            ref={this.nameInput}\n                            required\n                        />\n                        <Required />\n                     </div>\n                     <div className='AddFolder_buttons'>\n                        <button type='button' onClick={this.handleClickCancel}>\n                            Cancel\n                        </button>\n                        {' '}\n                        <button type='submit'>\n                         Save\n                        </button>\n                    </div>\n                </form>\n            </section>\n        )\n    }\n}","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.message) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React from 'react';\nimport config from '../config';\nimport ApiContext from '../ApiContext';\nimport ValidationError from '../ValidationError/ValidationError';\n\nconst Required = () => (\n    <span className='AddBookmark__required'>*</span>\n)\n\n\nexport default class AddNote extends React.Component {\n    static contextType = ApiContext;\n\n    static defaultProps = {\n        history: {\n            push: () => {}\n        },\n    }\n    state = {\n        error: null,\n        name: {\n            touched: false,\n            value: '',\n        }\n    }\n\n    updateName (name) {\n        this.setState({ name: { value: name, touched: true } });\n    }\n\n    //need a handleSubmit function\n    handleSubmit(e) {\n        e.preventDefault()\n        //get the form fields from the event\n        \n        const newNote = { \n            name: e.target['noteName'].value,\n            modified: new Date(),\n            folderId: e.target['noteFolderId'].value,\n            content: e.target['noteContent'].value,\n\n        }\n\n        console.log(newNote)\n\n        this.setState({ error: null})\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            body: JSON.stringify(newNote),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        .then( res => {\n            if (!res.ok) {\n                // get the error message from the response,\n                return res.json().then(error => {\n                  // then throw it\n                  throw error\n                })\n            }\n            return res.json()\n        })\n        .then(data => {\n            this.context.addNote(data);\n            this.props.history.push('/');\n        })\n        .catch(error => {\n            this.setState({ error })\n          })\n        \n    }  \n\n    //need a handleClickCancel function\n    handleClickCancel = () => {\n        this.props.history.push('/')\n      };\n    \n    validateNoteName() {\n        const name = this.state.name.value.trim();\n\n        if (name.length === 0 ) {\n            return \"Name is required\";\n        } else if (name.length < 3) {\n            return \"Name must be at least 3 characters long\";\n        }\n    }\n\n\n    render () {\n        const { error } = this.state\n        const { folders } = this.context\n        const nameError = this.validateNoteName();\n\n        return (\n            <section className=\"AddNote\">\n                <h2>Create a new note.</h2>\n                <form\n                    className=\"AddNote_form\"\n                    onSubmit={e => (this.handleSubmit(e))}\n                >\n                    <div className='AddNote__error' role='alert'>\n                        {error && <p>{error.message}</p>}\n                     </div>\n                     <div>\n                         <label htmlFor=\"noteName\">\n                             Name:\n                             \n                         </label>\n                        <input\n                            type=\"text\"\n                            name=\"noteName\"\n                            id=\"noteName\"\n                            placeholder=\"New Note\"\n                            onChange={e => this.updateName(e.target.value)}\n                            required\n                        />\n                        <Required />\n                        {this.state.name.touched && <ValidationError message={nameError} />}\n                     </div>\n                     <div>\n                         <label htmlFor=\"noteContent\">\n                             Name:\n                             \n                         </label>\n                        <input\n                            type=\"text\"\n                            name=\"noteContent\"\n                            id=\"noteContent\"\n                            placeholder=\"Type content here...\"\n                            ref={this.nameInput}\n                            required\n                        />\n                        <Required />\n                     </div>\n                     <div>\n                         <label htmlFor=\"folderSelection\">\n                             Select a folder:\n                         </label>\n                         <select \n                            id=\"noteFolderSelect\"\n                            name=\"noteFolderId\"\n                        >\n                            <option value={null}>...</option>\n                            {folders.map(folder =>\n                                <option \n                                    key={folder.id}\n                                    value={folder.id}>\n                                    {folder.name}\n                                </option>        \n                            )}\n                        </select>\n                     </div>\n                     <div className='AddNote_buttons'>\n                        <button type='button' onClick={this.handleClickCancel}>\n                            Cancel\n                        </button>\n                        {' '}\n                        <button \n                            type='submit'\n                            disabled = {this.validateNoteName()}\n                            >\n                         Save\n                        </button>\n                    </div>\n                </form>\n            </section>\n        )\n    }\n}","import React from 'react';\n\nexport default class FolderError extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {hasError: true};\n    }\n\n    render() {\n        if (this.state.hasError){\n            return(\n                <h2>Could not display this folder.</h2>\n            );\n        }\n        return this.props.children;\n    }\n    \n\n}","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport FolderError from '../FolderError/FolderError';\nimport config from '../config';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: []\n    };\n\n    handleAddFolder = folder => {\n        this.setState({\n            folders: [ ...this.state.folders, folder],\n        })\n    }\n\n    handleAddNote = note => {\n        this.setState({\n            notes: [ ...this.state.notes, note],\n        })\n    }\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <FolderError>\n                        <Route\n                            exact\n                            key={path}\n                            path={path}\n                            component={NoteListNav}\n                        />\n                    </FolderError>\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={AddFolder} />\n                <Route path=\"/add-note\" component={AddNote} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                \n                {['/', '/folder/:folderId'].map(path => (\n                    <FolderError>\n                        <Route\n                            exact\n                            key={path}\n                            path={path}\n                            component={NoteListMain}\n                        />\n                    </FolderError>\n                ))}\n                    <Route path=\"/note/:noteId\" component={NotePageMain} />\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            addFolder: this.handleAddFolder,\n            addNote: this.handleAddNote,\n        };\n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                            <FontAwesomeIcon icon=\"check-double\" />\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}